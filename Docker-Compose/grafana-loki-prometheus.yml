# docker compose -f ./grafana-loki-prometheus.yml -p grafana-loki-prometheus up -d

version: '3.8'

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  devnet:
    external: true

services:
  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: "unless-stopped"
    ports:
       - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3100/ready
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
    networks:
      - devnet

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    user: '472'
    restart: "unless-stopped"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    env_file:
      - ./grafana/config.monitoring
    depends_on:
      - prometheus
      - loki
    networks:
      - devnet

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: "unless-stopped"
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
    depends_on:
      - cadvisor
    networks:
      - devnet

  cadvisor:
    container_name: cadvisor
    # I'm not using the official image because an issue with Apple M1 (ARM)
    # see here https://github.com/google/cadvisor/issues/1236
    image: zcube/cadvisor:latest
    restart: "unless-stopped"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command:
    - "--port=8081"
    ports:
      - 8081:8081
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.tls=false"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.localhost`)"
    deploy:
      mode: global
    networks:
      - devnet

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: "unless-stopped"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100:9100
    deploy:
      mode: global
    networks:
      - devnet

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    restart: "unless-stopped"
    ports:
      - 9093:9093
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.tls=false"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.localhost`)"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - devnet